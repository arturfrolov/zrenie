/*eslint-disable */
function _toConsumableArray(t) {
  return _arrayWithoutHoles(t) || _iterableToArray(t) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError('Invalid attempt to spread non-iterable instance');
}
function _iterableToArray(t) {
  if (Symbol.iterator in Object(t) || Object.prototype.toString.call(t) === '[object Arguments]')
    return Array.from(t);
}
function _arrayWithoutHoles(t) {
  if (Array.isArray(t)) {
    for (var e = 0, n = new Array(t.length); e < t.length; e++) n[e] = t[e];
    return n;
  }
}
function _extends() {
  return (_extends =
    Object.assign ||
    function (t) {
      for (let e = 1; e < arguments.length; e++) {
        const n = arguments[e];
        for (const r in n) Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
      }
      return t;
    }).apply(this, arguments);
}
function _typeof(t) {
  return (_typeof =
    typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
      ? function (t) {
          return typeof t;
        }
      : function (t) {
          return t &&
            typeof Symbol === 'function' &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t;
        })(t);
}
!(function (t, e) {
  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' &&
  typeof module !== 'undefined'
    ? (module.exports = e())
    : typeof define === 'function' && define.amd
    ? define(e)
    : (t.LazyLoad = e());
})(this, () => {
  const t = typeof window !== 'undefined';
  const e =
    (t && !('onscroll' in window)) ||
    (typeof navigator !== 'undefined' && /(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));
  const n = t && 'IntersectionObserver' in window;
  const r = t && 'classList' in document.createElement('p');
  const o = {
    elements_selector: 'img',
    container: e || t ? document : null,
    threshold: 300,
    thresholds: null,
    data_src: 'src',
    data_srcset: 'srcset',
    data_sizes: 'sizes',
    data_bg: 'bg',
    data_poster: 'poster',
    class_loading: 'loading',
    class_loaded: 'loaded',
    class_error: 'error',
    load_delay: 0,
    auto_unobserve: !0,
    callback_enter: null,
    callback_exit: null,
    callback_reveal: null,
    callback_loaded: null,
    callback_error: null,
    callback_finish: null,
    use_native: !1,
  };
  const a = function (t, e) {
    let n;
    const r = new t(e);
    try {
      n = new CustomEvent('LazyLoad::Initialized', { detail: { instance: r } });
    } catch (t) {
      (n = document.createEvent('CustomEvent')).initCustomEvent('LazyLoad::Initialized', !1, !1, {
        instance: r,
      });
    }
    window.dispatchEvent(n);
  };
  const i = function (t, e) {
    return t.getAttribute(`data-${e}`);
  };
  const s = function (t, e, n) {
    const r = `data-${e}`;
    n !== null ? t.setAttribute(r, n) : t.removeAttribute(r);
  };
  const c = function (t) {
    return i(t, 'was-processed') === 'true';
  };
  const l = function (t, e) {
    return s(t, 'll-timeout', e);
  };
  const u = function (t) {
    return i(t, 'll-timeout');
  };
  const d = function (t, e, n, r) {
    t && (void 0 === r ? (void 0 === n ? t(e) : t(e, n)) : t(e, n, r));
  };
  const f = function (t, e) {
    (t._loadingCount += e),
      t._elements.length === 0 && t._loadingCount === 0 && d(t._settings.callback_finish, t);
  };
  const _ = function (t) {
    for (var e, n = [], r = 0; (e = t.children[r]); r += 1) e.tagName === 'SOURCE' && n.push(e);
    return n;
  };
  const v = function (t, e, n) {
    n && t.setAttribute(e, n);
  };
  const b = function (t, e) {
    v(t, 'sizes', i(t, e.data_sizes)),
      v(t, 'srcset', i(t, e.data_srcset)),
      v(t, 'src', i(t, e.data_src));
  };
  const m = {
    IMG(t, e) {
      const n = t.parentNode;
      n &&
        n.tagName === 'PICTURE' &&
        _(n).forEach((t) => {
          b(t, e);
        });
      b(t, e);
    },
    IFRAME(t, e) {
      v(t, 'src', i(t, e.data_src));
    },
    VIDEO(t, e) {
      _(t).forEach((t) => {
        v(t, 'src', i(t, e.data_src));
      }),
        v(t, 'poster', i(t, e.data_poster)),
        v(t, 'src', i(t, e.data_src)),
        t.load();
    },
  };
  const p = function (t, e) {
    let n;
    let r;
    const o = e._settings;
    const a = t.tagName;
    const s = m[a];
    if (s) {
      return (
        s(t, o),
        f(e, 1),
        void (e._elements = ((n = e._elements), (r = t), n.filter((t) => t !== r)))
      );
    }
    !(function (t, e) {
      const n = i(t, e.data_src);
      const r = i(t, e.data_bg);
      n && (t.style.backgroundImage = 'url("'.concat(n, '")')), r && (t.style.backgroundImage = r);
    })(t, o);
  };
  const g = function (t, e) {
    r ? t.classList.add(e) : (t.className += (t.className ? ' ' : '') + e);
  };
  const y = function (t, e) {
    r
      ? t.classList.remove(e)
      : (t.className = t.className
          .replace(new RegExp(`(^|\\s+)${e}(\\s+|$)`), ' ')
          .replace(/^\s+/, '')
          .replace(/\s+$/, ''));
  };
  const h = function (t, e, n) {
    t.addEventListener(e, n);
  };
  const E = function (t, e, n) {
    t.removeEventListener(e, n);
  };
  const w = function (t, e, n) {
    E(t, 'load', e), E(t, 'loadeddata', e), E(t, 'error', n);
  };
  const A = function (t, e, n) {
    const r = n._settings;
    const o = e ? r.class_loaded : r.class_error;
    const a = e ? r.callback_loaded : r.callback_error;
    const i = t.target;
    y(i, r.class_loading), g(i, o), d(a, i, n), f(n, -1);
  };
  const I = function (t, e) {
    const n = function n(o) {
      A(o, !0, e), w(t, n, r);
    };
    var r = function r(o) {
      A(o, !1, e), w(t, n, r);
    };
    !(function (t, e, n) {
      h(t, 'load', e), h(t, 'loadeddata', e), h(t, 'error', n);
    })(t, n, r);
  };
  const k = ['IMG', 'IFRAME', 'VIDEO'];
  const L = function (t, e) {
    const n = e._observer;
    S(t, e), n && e._settings.auto_unobserve && n.unobserve(t);
  };
  const O = function (t) {
    const e = u(t);
    e && (clearTimeout(e), l(t, null));
  };
  const x = function (t, e) {
    const n = e._settings.load_delay;
    let r = u(t);
    r ||
      ((r = setTimeout(() => {
        L(t, e), O(t);
      }, n)),
      l(t, r));
  };
  var S = function (t, e, n) {
    const r = e._settings;
    (!n && c(t)) ||
      (k.indexOf(t.tagName) > -1 && (I(t, e), g(t, r.class_loading)),
      p(t, e),
      (function (t) {
        s(t, 'was-processed', 'true');
      })(t),
      d(r.callback_reveal, t, e),
      d(r.callback_set, t, e));
  };
  const z = function (t) {
    return (
      !!n &&
      ((t._observer = new IntersectionObserver(
        (e) => {
          e.forEach((e) =>
            (function (t) {
              return t.isIntersecting || t.intersectionRatio > 0;
            })(e)
              ? (function (t, e, n) {
                  const r = n._settings;
                  d(r.callback_enter, t, e, n), r.load_delay ? x(t, n) : L(t, n);
                })(e.target, e, t)
              : (function (t, e, n) {
                  const r = n._settings;
                  d(r.callback_exit, t, e, n), r.load_delay && O(t);
                })(e.target, e, t),
          );
        },
        {
          root: (e = t._settings).container === document ? null : e.container,
          rootMargin: e.thresholds || `${e.threshold}px`,
        },
      )),
      !0)
    );
    let e;
  };
  const C = ['IMG', 'IFRAME'];
  const N = function (t, e) {
    return (function (t) {
      return t.filter((t) => !c(t));
    })(
      ((n =
        t ||
        (function (t) {
          return t.container.querySelectorAll(t.elements_selector);
        })(e)),
      Array.prototype.slice.call(n)),
    );
    let n;
  };
  const M = function (t) {
    const e = t._settings;
    _toConsumableArray(e.container.querySelectorAll(`.${e.class_error}`)).forEach((t) => {
      y(t, e.class_error),
        (function (t) {
          s(t, 'was-processed', null);
        })(t);
    }),
      t.update();
  };
  const R = function (e, n) {
    let r;
    (this._settings = (function (t) {
      return { ...o, ...t };
    })(e)),
      (this._loadingCount = 0),
      z(this),
      this.update(n),
      (r = this),
      t &&
        window.addEventListener('online', (t) => {
          M(r);
        });
  };
  return (
    (R.prototype = {
      update(t) {
        let n;
        const r = this;
        const o = this._settings;
        ((this._elements = N(t, o)), !e && this._observer)
          ? ((function (t) {
              return t.use_native && 'loading' in HTMLImageElement.prototype;
            })(o) &&
              ((n = this)._elements.forEach((t) => {
                C.indexOf(t.tagName) !== -1 && (t.setAttribute('loading', 'lazy'), S(t, n));
              }),
              (this._elements = N(t, o))),
            this._elements.forEach((t) => {
              r._observer.observe(t);
            }))
          : this.loadAll();
      },
      destroy() {
        const t = this;
        this._observer &&
          (this._elements.forEach((e) => {
            t._observer.unobserve(e);
          }),
          (this._observer = null)),
          (this._elements = null),
          (this._settings = null);
      },
      load(t, e) {
        S(t, this, e);
      },
      loadAll() {
        const t = this;
        this._elements.forEach((e) => {
          L(e, t);
        });
      },
    }),
    t &&
      (function (t, e) {
        if (e) {
          if (e.length) for (var n, r = 0; (n = e[r]); r += 1) a(t, n);
          else a(t, e);
        }
      })(R, window.lazyLoadOptions),
    R
  );
});
// # sourceMappingURL=lazyload.min.js.map
